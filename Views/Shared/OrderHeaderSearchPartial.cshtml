@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<form asp-action="Orders" method="get">
    <div class="d-flex align-items-center justify-content-between">
        <p class="fs-3">Find by </p>
    @if (SignInManager.IsSignedIn(User))
    {
        <a class="btn btn-success w-auto" asp-area="" asp-controller="OrderHeaders" asp-action="Create" title="Create">Create Order</a>
    }
    </div>
    
    <div class="d-flex align-items-end justify-content-evenly">
        <div class="me-3">
            <label class="form-label fw-bold">Order Number:</label>
            <input type="text" name="orderNumberSearch" class="form-control" />
        </div>
        <div class="me-4">
            <label class="form-label fw-bold">Order Type:</label>
            <select name="orderType" class="form-control form-select">
                <option value="">-- Select Type --</option>
                @foreach (var type in Html.GetEnumSelectList<OrderType>())
                {
                    <option value="@type.Value">@Enum.GetName(typeof(OrderType), int.Parse(type.Value))</option>
                }
            </select>
        </div>
        <div class="me-3">
            <label class="form-label fw-bold">Date From:</label>
            <input type="datetime-local" class="form-control" name="dateFrom" value="@DateTime.Now">
        </div>
        <div class="me-3">
            <label class="form-label fw-bold">Date To:</label>
            <input type="datetime-local" class="form-control" name="dateTo" value="@DateTime.Now">
        </div>
        <input type="submit" class="btn btn-secondary me-3" />
        <a asp-action="Orders" class="btn btn-outline-success">Clear</a>
    </div>
</form>